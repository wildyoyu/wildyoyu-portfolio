---
import type { AstroEvent } from '../data/events';
import { astroEvents } from '../data/events';

const now = new Date();
const props = Astro.props as { year?: number; month?: number };
const year = props.year ?? now.getFullYear();
const month = props.month ?? (now.getMonth() + 1); // 1..12

function buildMatrix(y: number, m: number){
  // m: 1..12
  const first = new Date(y, m-1, 1);
  const startWeekday = (first.getDay() + 6) % 7; // L=0..D=6 (Lunes primera col.)
  const daysInMonth = new Date(y, m, 0).getDate();
  const cells: Array<{d: number|null, iso?: string}> = [];
  for (let i=0;i<startWeekday;i++) cells.push({ d:null });
  for (let d=1; d<=daysInMonth; d++){
    const iso = `${y}-${String(m).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
    cells.push({ d, iso });
  }
  while (cells.length % 7 !== 0) cells.push({ d:null });
  const weeks: typeof cells[] = [];
  for (let i=0;i<cells.length;i+=7) weeks.push(cells.slice(i,i+7));
  return { weeks, daysInMonth };
}

const { weeks } = buildMatrix(year, month);

const byDay = new Map<string, AstroEvent[]>();
for (const ev of astroEvents){
  if (!/^\d{4}-\d{2}-\d{2}$/.test(ev.date)) continue;
  const arr = byDay.get(ev.date) ?? [];
  arr.push(ev);
  byDay.set(ev.date, arr);
}
const monthName = new Date(year, month-1, 1).toLocaleString('es-ES', { month:'long', year:'numeric' });
---
<section class="section" id="calendar">
  <div class="container">
    <h2 class="h2" style="margin-bottom:.6rem;">Calendario astronómico</h2>
    <div class="cal">
      <header class="cal__hdr">
        <div class="cal__title">{monthName}</div>
        <nav class="cal__nav" aria-label="Cambiar mes">
          <a class="btn cal__btn" href={`/calendar?y=${year}&m=${Math.max(1, month-1)}`} aria-label="Mes anterior">‹</a>
          <a class="btn cal__btn" href={`/calendar?y=${year}&m=${Math.min(12, month+1)}`} aria-label="Mes siguiente">›</a>
        </nav>
      </header>

      <div class="cal__grid">
        <div class="cal__dow">L</div><div class="cal__dow">M</div><div class="cal__dow">X</div>
        <div class="cal__dow">J</div><div class="cal__dow">V</div><div class="cal__dow">S</div><div class="cal__dow">D</div>

        {weeks.map(week => week.map(cell => (
          <div class={`cal__cell${cell.d ? '' : ' is-empty'}`}>
            {cell.d && (
              <>
                <div class="cal__num">{cell.d}</div>
                <div class="cal__events">
                  {(byDay.get(cell.iso!) ?? []).map(ev => (
                    <div class={`cal__badge t-${ev.type ?? 'otro'}`} title={ev.title}></div>
                  ))}
                </div>
              </>
            )}
          </div>
        )))}
      </div>

      <div class="cal__legend">
        <span><i class="cal__badge t-luna"></i> Luna</span>
        <span><i class="cal__badge t-lluvia"></i> Lluvia</span>
        <span><i class="cal__badge t-planeta"></i> Planeta</span>
        <span><i class="cal__badge t-eclipse"></i> Eclipse</span>
        <span><i class="cal__badge t-otro"></i> Otro</span>
      </div>

      <div class="cal__list">
        <h3 class="h2" style="font-size:18px; margin:.8rem 0 .4rem">Próximos</h3>
        <ul>
          {astroEvents
            .filter(ev => new Date(ev.date) >= new Date(new Date().toDateString()))
            .sort((a,b)=> new Date(a.date).getTime() - new Date(b.date).getTime())
            .slice(0,8)
            .map(ev => (
              <li><strong>{new Date(ev.date).toLocaleDateString('es-ES',{day:'2-digit',month:'short'})}</strong> — {ev.title}</li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>

  <style>
    /* Fondo del sitio se mantiene; el calendario solo usa líneas y números */
    .cal{display:grid; gap:10px; border:1px solid rgba(255,255,255,.08); border-radius:14px; padding:12px}
    .cal__hdr{display:flex; align-items:center; justify-content:space-between}
    .cal__title{text-transform:capitalize; font-weight:900; letter-spacing:.3px}
    .cal__btn{padding:.2rem .6rem}

    .cal__grid{display:grid; grid-template-columns:repeat(7,1fr); gap:0}
    .cal__dow, .cal__cell{
      border-top:1px solid rgba(255,255,255,.08);
      border-left:1px solid rgba(255,255,255,.08);
      min-height:64px; display:grid; align-content:start; padding:6px 6px 2px;
    }
    .cal__dow:nth-child(7n), .cal__cell:nth-child(7n){ border-right:1px solid rgba(255,255,255,.08) }
    .cal__cell:last-child{ border-bottom:1px solid rgba(255,255,255,.08) }
    .cal__dow{ text-align:center; align-content:center; opacity:.7; font-weight:700; min-height:36px }
    .cal__cell.is-empty{ background:linear-gradient(180deg, rgba(255,255,255,.03), transparent) }

    .cal__num{ font-weight:800; opacity:.95 }
    .cal__events{ display:flex; gap:4px; margin-top:auto; align-items:flex-end; min-height:14px }
    .cal__badge{ width:8px; height:8px; border-radius:999px; display:inline-block; border:1px solid rgba(255,255,255,.6) }
    .t-luna{ background:#dbeafe; }
    .t-lluvia{ background:#fde68a; }
    .t-planeta{ background:#c7f9cc; }
    .t-eclipse{ background:#fecaca; }
    .t-otro{ background:#e5e7eb; }

    .cal__legend{display:flex; flex-wrap:wrap; gap:10px; opacity:.9; font-size:14px}
    .cal__list ul{margin:0; padding-left:18px}
  </style>
</section>
